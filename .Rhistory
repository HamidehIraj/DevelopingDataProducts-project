training <- read.csv("pml-training.csv")
testing  <- read.csv("pml-testing.csv")
View(testing)
View(training)
library(devtools)
install_github('rstudio/shinyapps')
library(shiny)
shinyapps::setAccountInfo(name='hamidehiraj', token='3CEFB144B0817DE2E545E62E66E799FC', secret='lJbuRdYbVXel1F/dh/03cRbIAL8I3AQK3nncE9rE')
runApp
runApp()
factorial(2)
factorial(3)
factorial(5)
runApp()
data(iris)
str(iris)
inTrain <- createDataPartition(y=iris$Species,
p=0.7, list=FALSE)
library(caret)
inTrain <- createDataPartition(y=iris$Species, p=0.7, list=FALSE)
training <- iris[inTrain,]
testing <- iris[-inTrain,]
runapp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
k=3
kMeans1 <- kmeans(subset(training,select=-c(Species)),centers=k)
confusionMatrix(kMeans1,testing )
Mat<- confusionMatrix(kMeans1,testing )
no
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
k=3
kMeans1 <- kmeans(subset(training,select=-c(Species)),centers=k)
training$clusters <- as.factor(kMeans1$cluster)
myImage <- qplot(Petal.Width,Petal.Length,colour=clusters,data=training,main="iris Data Clusters")
myImage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
inTrain  <- createDataPartition(y=iris$Species, p=0.7, list=FALSE)
training <- iris[inTrain,]
testing  <- iris[-inTrain,]
kMeans1 <- kmeans(subset(training,select=-c(Species)),centers=input$k)
training$clusters <- as.factor(kMeans1$cluster)
kMeans1 <- kmeans(subset(training,select=-c(Species)),centers=3)
training$clusters <- as.factor(kMeans1$cluster)
plot(Petal.Width,Petal.Length,colour=clusters,data=training,main="iris Data Clusters")
iris$Pw=etal.Width
iris$Petal.Width
training$Petal.Width
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data(iris)
library(caret)
library(ggplot2)
inTrain <- createDataPartition(y=iris$Species, p=0.7, list=FALSE)
training <- iris[inTrain,]
testing <- iris[-inTrain,]
kMeans1 <- kmeans(subset(training,select=-c(Species)),centers=k)
training$clusters <- as.factor(kMeans1$cluster)
k=3
kMeans1 <- kmeans(subset(training,select=-c(Species)),centers=k)
training$clusters <- as.factor(kMeans1$cluster)
plot(Petal.Width,Petal.Length,colour=clusters,data=training,main="iris Data Clusters")
plot(training$Petal.Width,training$Petal.Length,colour=clusters,data=training,main="iris Data Clusters")
plot(training$Petal.Width,training$Petal.Length,colour=training$clusters,data=training,main="iris Data Clusters")
plot(training$Petal.Width,training$Petal.Length,color=training$clusters,data=training,main="iris Data Clusters")
myImage <- qplot(Petal.Width,Petal.Length,colour=clusters,data=training,main="iris Data Clusters")
qplot(Petal.Width,Petal.Length,colour=clusters,data=training,main="iris Data Clusters")
runnApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
library(devtools)
library(shinyapps)
deployApp()
deployApp()
deployApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
deployApp()
runApp()
deployApp()
deployApp()
deployApp()
install.packages("nlopt")
install.packages("nloptr")
install.packages("nloptr")
deployApp()
library(shiny)
runApp()
deployApp()
library(shinyapps)
deployApp()
install.packages("gtools")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
deployApp()
library(shinyapps)
deployApp()
rm(k)
depployApp()
library(shiny)
library(shinyio)
library(shinyio)
depployApp()
library(shinyapps)
depployApp()
deployApp()
